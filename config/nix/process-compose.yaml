# Minecraft Marketplace - Process Orchestration
# Nix-managed development environment with proper service dependencies

version: "0.5"

environment:
  - NODE_ENV=development
  - POSTGRES_DB=minecraft_marketplace_dev
  - POSTGRES_USER=dev_user
  - POSTGRES_PASSWORD=dev_password_2024
  - DATABASE_URL=postgresql://dev_user:dev_password_2024@localhost:7414/minecraft_marketplace_dev
  - REDIS_URL=redis://localhost:7415
  - FRONTEND_PORT=7411
  - BACKEND_PORT=7412
  - POSTGREST_PORT=7413
  - POSTGRES_PORT=7414
  - REDIS_PORT=7415
  - ASTRO_TELEMETRY_DISABLED=1
  - JWT_SECRET=dev_jwt_secret_2024
  - CORS_ORIGIN=http://localhost:7411

processes:
  # Infrastructure Services
  postgres:
    command: postgres -D ./tmp/postgres -p 7414
    is_daemon: true
    readiness_probe:
      exec:
        command: pg_isready -h localhost -p 7414 -U dev_user
      initial_delay_seconds: 2
      period_seconds: 1
      timeout_seconds: 5
      success_threshold: 1
      failure_threshold: 10
    depends_on:
      postgres-init:
        condition: process_completed

  postgres-init:
    command: |
      mkdir -p ./tmp/postgres
      if [ ! -f ./tmp/postgres/PG_VERSION ]; then
        echo "🗄️ Initializing PostgreSQL database..."
        initdb -D ./tmp/postgres -U dev_user --auth-local=trust --auth-host=password
        echo "host all all 127.0.0.1/32 trust" >> ./tmp/postgres/pg_hba.conf
        echo "host all all ::1/128 trust" >> ./tmp/postgres/pg_hba.conf
        echo "port = 7414" >> ./tmp/postgres/postgresql.conf
        echo "log_statement = 'all'" >> ./tmp/postgres/postgresql.conf
        echo "log_min_duration_statement = 0" >> ./tmp/postgres/postgresql.conf
      fi
    is_daemon: false

  redis:
    command: redis-server --port 7415 --dir ./tmp/redis
    is_daemon: true
    readiness_probe:
      exec:
        command: redis-cli -p 7415 ping
      initial_delay_seconds: 1
      period_seconds: 1
      timeout_seconds: 5
      success_threshold: 1
      failure_threshold: 5
    depends_on:
      redis-init:
        condition: process_completed

  redis-init:
    command: mkdir -p ./tmp/redis
    is_daemon: false

  # Database API
  postgrest:
    command: postgrest
    environment:
      - PGRST_DB_URI=postgres://dev_user:dev_password_2024@localhost:7414/minecraft_marketplace_dev
      - PGRST_DB_SCHEMAS=public
      - PGRST_DB_ANON_ROLE=anon
      - PGRST_JWT_SECRET=dev_jwt_secret_2024
      - PGRST_SERVER_PORT=7413
      - PGRST_OPENAPI_SERVER_PROXY_URI=http://localhost:7413
    is_daemon: true
    readiness_probe:
      http_get:
        host: localhost
        port: 7413
        path: /
      initial_delay_seconds: 3
      period_seconds: 2
      timeout_seconds: 5
      success_threshold: 1
      failure_threshold: 10
    depends_on:
      postgres:
        condition: process_healthy

  # Application Services
  backend:
    command: npm run dev --workspace=backend
    environment:
      - PORT=7412
      - CORS_ORIGIN=http://localhost:7411
    is_daemon: true
    readiness_probe:
      http_get:
        host: localhost
        port: 7412
        path: /health
      initial_delay_seconds: 5
      period_seconds: 2
      timeout_seconds: 5
      success_threshold: 1
      failure_threshold: 10
    depends_on:
      postgres:
        condition: process_healthy
      redis:
        condition: process_healthy

  frontend:
    command: npm run dev --workspace=frontend
    environment:
      - PORT=7411
      - HOST=0.0.0.0
    is_daemon: true
    readiness_probe:
      http_get:
        host: localhost
        port: 7411
        path: /
      initial_delay_seconds: 10
      period_seconds: 3
      timeout_seconds: 10
      success_threshold: 1
      failure_threshold: 5
    depends_on:
      backend:
        condition: process_healthy
      postgrest:
        condition: process_healthy

log_level: info
log_configuration:
  disable_json: true
  
tui: true