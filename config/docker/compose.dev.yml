# Development Environment - Uncommon Ports to Avoid Conflicts
# Usage: docker compose -f compose.dev.yml up
# Uses uncommon ports: 7410-7419 range

services:
  # ============================================================================
  # nginx Reverse Proxy - Development Entry Point
  # ============================================================================
  nginx:
    image: nginx:alpine
    container_name: minecraft-marketplace-nginx-dev
    ports:
      - "7410:80"  # Single entry point on uncommon port
    volumes:
      - ./infrastructure/docker/nginx.dev.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - postgrest
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/nginx-health"]
      interval: 10s
      timeout: 5s
      retries: 3

  # ============================================================================
  # PostgreSQL Database - Development
  # ============================================================================
  postgres:
    image: postgres:17-alpine
    container_name: minecraft-marketplace-postgres-dev
    ports:
      - "7414:5432"  # Uncommon port to avoid conflicts
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-minecraft_marketplace_dev}
      - POSTGRES_USER=${POSTGRES_USER:-dev_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-dev_password_2024}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/01-init.sql:ro
      - ./database/seed.sql:/docker-entrypoint-initdb.d/02-seed.sql:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-dev_user} -d ${POSTGRES_DB:-minecraft_marketplace_dev}"]
      interval: 5s
      timeout: 3s
      retries: 5
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements
      -c pg_stat_statements.track=all
      -c max_connections=100
      -c log_statement=all
      -c log_min_duration_statement=0

  # PostgREST API - Development
  postgrest:
    image: postgrest/postgrest:v12.0.2
    container_name: minecraft-marketplace-postgrest-dev
    ports:
      - "7413:3000"  # Uncommon port to avoid conflicts
    environment:
      - PGRST_DB_URI=postgres://${POSTGRES_USER:-dev_user}:${POSTGRES_PASSWORD:-dev_password_2024}@postgres:5432/${POSTGRES_DB:-minecraft_marketplace_dev}
      - PGRST_DB_SCHEMAS=public
      - PGRST_DB_ANON_ROLE=${POSTGREST_ANON_ROLE:-anon}
      - PGRST_JWT_SECRET=${POSTGREST_JWT_SECRET:-dev_jwt_secret_2024}
      - PGRST_DB_USE_LEGACY_GUCS=false
      - PGRST_LOG_LEVEL=info
      - PGRST_OPENAPI_SERVER_PROXY_URI=http://localhost:7413
    depends_on:
      postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Valkey/Redis - Development
  valkey:
    image: valkey/valkey:8.1-alpine
    container_name: minecraft-marketplace-valkey-dev
    ports:
      - "7415:6379"  # Uncommon port to avoid conflicts
    volumes:
      - valkey_dev_data:/data
    restart: unless-stopped
    command: >
      valkey-server
      --appendonly yes
      --appendfsync everysec
      --maxmemory 128mb
      --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "valkey-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  postgres_dev_data:
  valkey_dev_data:

# Development Notes:
# - Frontend dev server: npm run dev:frontend (port 7411)
# - Backend dev server: npm run dev:backend (port 7412)  
# - Database accessible at: localhost:7414
# - PostgREST API at: http://localhost:7413
# - Valkey/Redis at: localhost:7415
#
# Access URLs:
# - API Documentation: http://localhost:7413
# - Database direct: postgresql://dev_user:dev_password_2024@localhost:7414/minecraft_marketplace_dev