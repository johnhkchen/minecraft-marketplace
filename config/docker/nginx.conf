# Minecraft Marketplace - nginx Reverse Proxy Configuration
# Single entry point for all services

events {
    worker_connections 1024;
}

http {
    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    server_tokens off;

    # MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json;

    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=5r/s;

    # Upstream servers
    upstream frontend {
        server frontend:4321;
    }

    upstream backend {
        server backend:3001;
    }

    upstream postgrest {
        server postgrest:3000;
    }

    upstream swagger {
        server swagger-ui:8080;
    }

    # Main server block
    server {
        listen 80;
        server_name localhost;
        
        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Frontend routes (Astro SSR)
        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for dev mode
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # Timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;
        }

        # Backend API routes (Hono)
        location /api/v1/ {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://backend/api/v1/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # API timeouts
            proxy_connect_timeout 10s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Database API routes (PostgREST)
        location /api/data/ {
            limit_req zone=api burst=50 nodelay;
            
            proxy_pass http://postgrest/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # PostgREST specific headers
            proxy_set_header Accept-Profile public;
            proxy_set_header Content-Profile public;
        }

        # API Documentation (Swagger UI)
        location /docs/ {
            proxy_pass http://swagger/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # File uploads (with rate limiting)
        location /uploads/ {
            limit_req zone=upload burst=10 nodelay;
            
            alias /app/uploads/;
            expires 1y;
            add_header Cache-Control "public, immutable";
            
            # Security for uploaded files
            location ~* \.(php|php5|phtml|pl|py|jsp|asp|sh|cgi)$ {
                deny all;
            }
        }

        # Health check endpoints (no rate limiting)
        location ~ ^/(health|api/health)$ {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            access_log off;
        }
        
        # Main status endpoint
        location /status {
            access_log off;
            return 200 'üèóÔ∏è Minecraft Marketplace - NASDAQ for Blocks\n\nStatus: ONLINE ‚úÖ\nPort: 2888\nServices: Frontend (Astro+Svelte), Backend (Hono), Database (PostgreSQL+PostgREST)\nTime: $time_iso8601\nConnections: $connections_active\n\nüåê Routes:\n  / - Homepage\n  /api/v1/ - Backend API\n  /api/data/ - Database API\n  /docs/ - API Documentation\n  /status - This status page\n\nüíé Ready for diamond trading!';
            add_header Content-Type text/plain;
        }

        # Backend health check
        location /api/v1/health {
            proxy_pass http://backend/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            access_log off;
        }

        # Favicon and static assets
        location /favicon.ico {
            proxy_pass http://frontend/favicon.ico;
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }

        # Static assets with long cache
        location ~* \.(css|js|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            proxy_pass http://frontend;
            expires 1y;
            add_header Cache-Control "public, immutable";
            
            # Add CORS for font files
            add_header Access-Control-Allow-Origin "*";
        }

        # Security: Block sensitive files
        location ~ /\.(ht|git|env) {
            deny all;
        }

        # Security: Block common attack patterns
        location ~ /(wp-admin|wp-login|admin|phpmyadmin) {
            return 404;
        }
    }

    # Health check server (internal)
    server {
        listen 8080;
        server_name localhost;
        
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Status endpoint with system information
        location /status {
            access_log off;
            return 200 '{"status":"online","service":"Minecraft Marketplace","nginx":"reverse-proxy","timestamp":"$time_iso8601","connections":"$connections_active","port":"2888","version":"v1.0.0"}';
            add_header Content-Type application/json;
        }
    }
}