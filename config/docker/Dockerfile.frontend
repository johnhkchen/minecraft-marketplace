# Minecraft Marketplace - Frontend Dockerfile
# Astro SSR + Svelte components + secure API routes

FROM node:22-alpine AS base

# Install dependencies only when needed
FROM base AS deps
WORKDIR /app

# Copy package files
COPY package*.json ./
COPY workspaces/frontend/package*.json ./workspaces/frontend/
COPY workspaces/shared/package.json ./workspaces/shared/

# Install dependencies
RUN npm ci --only=production && npm cache clean --force

# Build the application
FROM base AS builder
WORKDIR /app

# Copy package files and source code
COPY package*.json ./
COPY config/typescript/tsconfig.json ./tsconfig.json
COPY workspaces/frontend/ ./workspaces/frontend/
COPY workspaces/shared/ ./workspaces/shared/
COPY database/ ./database/

# Install all dependencies (including dev dependencies for build)
RUN npm ci

# Build shared module first (skip if no src directory)
WORKDIR /app/workspaces/shared
RUN if [ -d "src" ]; then npm run build; else echo "No shared src directory, skipping build"; fi

# Build the frontend application
WORKDIR /app/workspaces/frontend
RUN npm run build

# Production image - Following Astro's official Docker recommendations
FROM node:lts AS runtime
WORKDIR /app

# Create non-root user first
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 astro

# Copy the entire built project with correct ownership
COPY --from=builder --chown=astro:nodejs /app/workspaces/frontend/dist ./dist
COPY --from=builder --chown=astro:nodejs /app/workspaces/frontend/package*.json ./
COPY --from=builder --chown=astro:nodejs /app/workspaces/shared ./shared

# Install only production dependencies for runtime
RUN npm install --omit=dev

# Create upload directories with proper ownership from the start
RUN mkdir -p uploads/evidence && chown -R astro:nodejs uploads

# Set environment variables per Astro documentation
ENV NODE_ENV=production
ENV HOST=0.0.0.0
ENV PORT=4321

# Expose port
EXPOSE 4321

# Switch to non-root user
USER astro

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
  CMD node -e "require('http').get('http://localhost:4321', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) }).on('error', () => process.exit(1))"

# Start the application using Astro's recommended command
CMD ["node", "./dist/server/entry.mjs"]