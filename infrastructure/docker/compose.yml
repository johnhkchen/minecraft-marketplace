# Minecraft Marketplace - Production Docker Compose Configuration
# Fresh install: docker compose up

version: '3.8'

services:
  # ============================================================================
  # Reverse Proxy - Single Entry Point
  # ============================================================================
  nginx:
    image: nginx:alpine
    container_name: minecraft-marketplace-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ../../uploads:/app/uploads:ro
    depends_on:
      - frontend
      - backend
      - postgrest
      - swagger-ui
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ============================================================================
  # Frontend - Astro SSR + Svelte Components
  # ============================================================================
  frontend:
    build:
      context: ../../
      dockerfile: infrastructure/docker/Dockerfile.frontend
    container_name: minecraft-marketplace-frontend
    environment:
      - NODE_ENV=production
      - HOST=0.0.0.0
      - PORT=4321
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - VALKEY_HOST=valkey
      - VALKEY_PORT=6379
      - ASTRO_SECRET_KEY=${ASTRO_SECRET_KEY}
      - ASTRO_SESSION_SECRET=${ASTRO_SESSION_SECRET}
      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
      - DISCORD_CLIENT_SECRET=${DISCORD_CLIENT_SECRET}
      - DISCORD_REDIRECT_URI=${DISCORD_REDIRECT_URI}
    volumes:
      - ../../uploads:/app/uploads
    depends_on:
      db:
        condition: service_healthy
      valkey:
        condition: service_started
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4321/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ============================================================================
  # Backend - Hono External Integrations
  # ============================================================================
  backend:
    build:
      context: ../../
      dockerfile: infrastructure/docker/Dockerfile.backend
    container_name: minecraft-marketplace-backend
    environment:
      - NODE_ENV=production
      - HOST=0.0.0.0
      - PORT=3001
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - HONO_JWT_SECRET=${HONO_JWT_SECRET}
      - DISCORD_WEBHOOK_URL=${DISCORD_WEBHOOK_URL}
      - BAML_API_KEY=${BAML_API_KEY}
      - BAML_MODEL=${BAML_MODEL}
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ============================================================================
  # Database - PostgreSQL 17+
  # ============================================================================
  db:
    image: postgres:17-alpine
    container_name: minecraft-marketplace-db
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../database/schema:/docker-entrypoint-initdb.d:ro
    ports:
      - "127.0.0.1:5432:5432" # Only expose on localhost for security
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements
      -c pg_stat_statements.track=all
      -c max_connections=100
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
      -c maintenance_work_mem=64MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=16MB
      -c default_statistics_target=100

  # ============================================================================
  # PostgREST - Auto-Generated REST API
  # ============================================================================
  postgrest:
    image: postgrest/postgrest:v12.0.2
    container_name: minecraft-marketplace-postgrest
    environment:
      - PGRST_DB_URI=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}
      - PGRST_DB_SCHEMAS=public
      - PGRST_DB_ANON_ROLE=${POSTGREST_ANON_ROLE}
      - PGRST_JWT_SECRET=${POSTGREST_JWT_SECRET}
      - PGRST_DB_USE_LEGACY_GUCS=false
      - PGRST_LOG_LEVEL=info
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ============================================================================
  # Session Storage - Valkey (Redis-compatible)
  # ============================================================================
  valkey:
    image: valkey/valkey:8.1-alpine
    container_name: minecraft-marketplace-valkey
    volumes:
      - valkey_data:/data
    ports:
      - "127.0.0.1:6379:6379" # Only expose on localhost for security
    restart: unless-stopped
    command: >
      valkey-server
      --appendonly yes
      --appendfsync everysec
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "valkey-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # ============================================================================
  # API Documentation - Swagger UI
  # ============================================================================
  swagger-ui:
    image: swaggerapi/swagger-ui:latest
    container_name: minecraft-marketplace-swagger
    environment:
      - SWAGGER_JSON_URL=http://postgrest:3000/
      - BASE_URL=/docs
    depends_on:
      - postgrest
    restart: unless-stopped

# ============================================================================
# Volumes for Data Persistence
# ============================================================================
volumes:
  postgres_data:
    driver: local
    name: minecraft-marketplace-postgres-data
  valkey_data:
    driver: local
    name: minecraft-marketplace-valkey-data

# ============================================================================
# Networks
# ============================================================================
networks:
  default:
    name: minecraft-marketplace-network
    driver: bridge