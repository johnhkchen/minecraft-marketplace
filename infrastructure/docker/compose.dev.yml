# Minecraft Marketplace - Development Docker Compose Configuration
# Development environment with hot reload and debugging

services:
  # ============================================================================
  # nginx Reverse Proxy - Single Entry Point
  # ============================================================================
  nginx:
    image: nginx:alpine
    container_name: minecraft-marketplace-dev-nginx
    ports:
      - "2888:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ../../uploads:/app/uploads:ro
    depends_on:
      - frontend
      - backend
      - postgrest
      - swagger-ui
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8080/nginx-health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ============================================================================
  # Development Database - No external ports (access via nginx)
  # ============================================================================
  db:
    image: postgres:17-alpine
    container_name: minecraft-marketplace-dev-db
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-minecraft_marketplace_dev}
      - POSTGRES_USER=${POSTGRES_USER:-marketplace_dev}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-dev_password}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ../database/schema:/docker-entrypoint-initdb.d:ro
    # No external ports - access via container network only
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-marketplace_dev} -d ${POSTGRES_DB:-minecraft_marketplace_dev}"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: >
      postgres
      -c shared_preload_libraries=pg_stat_statements
      -c pg_stat_statements.track=all
      -c log_statement=all
      -c log_min_duration_statement=0
      -c max_connections=100

  # ============================================================================
  # Development Cache - Valkey with persistence disabled for speed
  # ============================================================================
  valkey:
    image: valkey/valkey:8.1-alpine
    container_name: minecraft-marketplace-dev-valkey
    # No external ports - access via container network only
    restart: unless-stopped
    command: >
      valkey-server
      --save ""
      --maxmemory 128mb
      --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "valkey-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # ============================================================================
  # PostgREST for API development
  # ============================================================================
  postgrest:
    image: postgrest/postgrest:v12.0.2
    container_name: minecraft-marketplace-dev-postgrest
    # No external ports - access via nginx /api/data/
    environment:
      - PGRST_DB_URI=postgres://${POSTGRES_USER:-marketplace_dev}:${POSTGRES_PASSWORD:-dev_password}@db:5432/${POSTGRES_DB:-minecraft_marketplace_dev}
      - PGRST_DB_SCHEMAS=public
      - PGRST_DB_ANON_ROLE=${POSTGREST_ANON_ROLE:-anon}
      - PGRST_JWT_SECRET=${POSTGREST_JWT_SECRET:-development_secret_key_change_in_production}
      - PGRST_DB_USE_LEGACY_GUCS=false
      - PGRST_LOG_LEVEL=info
      - PGRST_OPENAPI_SERVER_PROXY_URI=http://localhost:3000
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:3000/"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ============================================================================
  # Frontend Application (will be built when we add it)
  # ============================================================================
  frontend:
    build:
      context: ../../
      dockerfile: infrastructure/docker/Dockerfile.frontend
    container_name: minecraft-marketplace-dev-frontend
    environment:
      - NODE_ENV=development
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-minecraft_marketplace_dev}
      - POSTGRES_USER=${POSTGRES_USER:-marketplace_dev}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-dev_password}
      - VALKEY_HOST=valkey
      - VALKEY_PORT=6379
    volumes:
      - ../../uploads:/app/uploads
    depends_on:
      db:
        condition: service_healthy
      valkey:
        condition: service_started
    restart: unless-stopped

  # ============================================================================
  # Backend Application (will be built when we add it)
  # ============================================================================
  backend:
    build:
      context: ../../
      dockerfile: infrastructure/docker/Dockerfile.backend
    container_name: minecraft-marketplace-dev-backend
    environment:
      - NODE_ENV=development
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=${POSTGRES_DB:-minecraft_marketplace_dev}
      - POSTGRES_USER=${POSTGRES_USER:-marketplace_dev}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-dev_password}
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped

  # ============================================================================
  # Swagger UI for API documentation
  # ============================================================================
  swagger-ui:
    image: swaggerapi/swagger-ui:latest
    container_name: minecraft-marketplace-dev-swagger
    # No external ports - access via nginx /docs/
    environment:
      - SWAGGER_JSON_URL=http://localhost:3000/
    depends_on:
      - postgrest
    restart: unless-stopped

# ============================================================================
# Development Volumes
# ============================================================================
volumes:
  postgres_dev_data:
    driver: local
    name: minecraft-marketplace-dev-postgres-data

# ============================================================================
# Development Network
# ============================================================================
networks:
  default:
    name: minecraft-marketplace-dev-network
    driver: bridge