---
// Base Layout - Foundation for all pages
// Following GAMEPLAN SSR architecture with proper meta tags

export interface Props {
  title: string;
  description?: string;
}

const { title, description = "Discord-native Minecraft marketplace with community-driven pricing" } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <title>{title}</title>
    
    <!-- Minecraft-themed fonts and styles -->
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@400;500;700&display=swap" rel="stylesheet">
  </head>
  <body>
    <slot />
    
    <!-- Global error handling for development -->
    <script>
      if (import.meta.env.DEV) {
        window.addEventListener('error', (e) => {
          console.error('Global error:', e.error);
        });
        
        window.addEventListener('unhandledrejection', (e) => {
          console.error('Unhandled promise rejection:', e.reason);
        });
      }
    </script>
  </body>
</html>

<style is:global>
  :root {
    --color-primary: #ffd700;
    --color-secondary: #8b5a3c;
    --color-accent: #4caf50;
    --color-danger: #ef4444;
    --color-warning: #f59e0b;
    --color-info: #3b82f6;
    
    --color-bg-primary: #1a1a2e;
    --color-bg-secondary: #16213e;
    --color-bg-tertiary: #0f3460;
    
    --color-text-primary: #ffffff;
    --color-text-secondary: #cccccc;
    --color-text-muted: #9ca3af;
    
    --font-family-primary: 'JetBrains Mono', 'Courier New', monospace;
    --font-family-secondary: system-ui, -apple-system, sans-serif;
    
    --border-radius: 8px;
    --shadow-sm: 0 1px 2px 0 rgba(0, 0, 0, 0.05);
    --shadow-md: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
    --shadow-lg: 0 10px 15px -3px rgba(0, 0, 0, 0.1);
  }

  * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }

  html {
    font-family: var(--font-family-primary);
    color: var(--color-text-primary);
    background: var(--color-bg-primary);
  }

  body {
    min-height: 100vh;
    line-height: 1.6;
  }

  button {
    font-family: inherit;
    cursor: pointer;
    border: none;
    border-radius: var(--border-radius);
    padding: 0.75rem 1.5rem;
    font-weight: 500;
    transition: all 0.2s ease;
  }

  button:hover {
    transform: translateY(-1px);
  }

  button:active {
    transform: translateY(0);
  }

  .btn-primary {
    background: var(--color-accent);
    color: white;
  }

  .btn-primary:hover {
    background: #45a049;
  }

  .btn-secondary {
    background: var(--color-secondary);
    color: white;
  }

  .btn-secondary:hover {
    background: #a0693d;
  }

  .btn-danger {
    background: var(--color-danger);
    color: white;
  }

  .btn-danger:hover {
    background: #dc2626;
  }

  input, select, textarea {
    font-family: inherit;
    padding: 0.5rem;
    border: 2px solid #374151;
    border-radius: var(--border-radius);
    background: rgba(255, 255, 255, 0.1);
    color: var(--color-text-primary);
  }

  input:focus, select:focus, textarea:focus {
    outline: none;
    border-color: var(--color-primary);
  }

  .container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
  }

  .grid {
    display: grid;
    gap: 1rem;
  }

  .grid-2 {
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
  }

  .grid-3 {
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  }

  .card {
    background: rgba(255, 255, 255, 0.05);
    border: 2px solid var(--color-secondary);
    border-radius: var(--border-radius);
    padding: 1.5rem;
    backdrop-filter: blur(10px);
  }

  .card:hover {
    border-color: var(--color-primary);
    transform: translateY(-2px);
    box-shadow: var(--shadow-lg);
  }

  .loading {
    display: inline-block;
    width: 20px;
    height: 20px;
    border: 3px solid rgba(255, 255, 255, 0.3);
    border-radius: 50%;
    border-top-color: var(--color-primary);
    animation: spin 1s ease-in-out infinite;
  }

  @keyframes spin {
    to { transform: rotate(360deg); }
  }

  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
  }
</style>